<UserControl x:Class="Olf.GoldenHorse.Core.Views.TestDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:views="clr-namespace:Olf.GoldenHorse.Core.Views"
             xmlns:treeview="clr-namespace:Olf.GoldenHorse.Core.Views.Themes"
             xmlns:customControls="clr-namespace:Olf.GoldenHorse.CustomControls;assembly=Olf.GoldenHorse.CustomControls"
               xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:converters="clr-namespace:Olf.GoldenHorse.Core.Views.Converters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <UserControl.Resources>

        <SolidColorBrush x:Key="MyBorderBrush" Color="LightGoldenrodYellow"></SolidColorBrush>

        <Style x:Key="BorderStyle" TargetType="Border">
            <Setter Property="BorderBrush" Value="{StaticResource MyBorderBrush}"></Setter>
            <Setter Property="BorderThickness" Value="0.3"></Setter>
        </Style>

        <LinearGradientBrush x:Key="ColumnBrush" StartPoint="1,0" EndPoint="1,1">
            <GradientStop Color="Gray" Offset="0"></GradientStop>
            <GradientStop Color="DarkGray" Offset=".8"></GradientStop>
            <GradientStop Color="DimGray" Offset="1"></GradientStop>
        </LinearGradientBrush>

        <DataTemplate x:Key="ColumnHeaderTemplate">
            <Label Content="{TemplateBinding Content}" Foreground="White">
                <Label.Effect>
                    <DropShadowEffect BlurRadius="5" 
                                            Color="Black" 
                                            Opacity="1" 
                                            ShadowDepth="0" />
                </Label.Effect>
            </Label>
        </DataTemplate>

        <Style TargetType="GridViewColumnHeader" x:Key="GridViewColumnStyle">
            <Setter Property="Background" Value="{StaticResource ColumnBrush}" ></Setter>
            <Setter Property="Foreground" Value="White" ></Setter>
        </Style>

        <LinearGradientBrush x:Key="AvalonDock_ThemeVS2010_BaseColor25" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFFCF2" Offset="0" />
            <GradientStop Color="#FFEDBA" Offset="0.5" />
            <GradientStop Color="#FFE8A6" Offset="0.5" />
            <GradientStop Color="#FFE8A6" Offset="1" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="AvalonDock_ThemeVS2010_BaseColor33">
            <SolidColorBrush.Color>
                <Color A="255" B="67" G="67" R="67"></Color>
            </SolidColorBrush.Color>
        </SolidColorBrush>
        
        <converters:TestItemImageConverter x:Key="TestItemImageConverter" />

        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="True">
            </Setter>
        </Style>

    </UserControl.Resources>
   
    <Grid x:Name="grid1" >
        <Grid.RowDefinitions>
            <RowDefinition Height="28" />
            <RowDefinition Height="300*" />
        </Grid.RowDefinitions>
        <ToolBar Grid.Row="0" Background="{StaticResource AvalonDock_ThemeVS2010_BaseColor33}" >
          
            <Button Command="{Binding PlayCommand}" Margin="0,0,17,0" Height="25" 
                VerticalAlignment="Top" Background="Transparent" 
                    HorizontalAlignment="Right" >
                <StackPanel Orientation="Horizontal">
                    <Image Height="20" Width="20" Source="../../Images/Run.png"></Image> 
                    <TextBlock Background="Transparent"
                               Foreground="White" Text="Run Test"></TextBlock>
                </StackPanel>
            </Button>
           
          
            <xctk:DropDownButton x:Name="dropDownButton"  HorizontalAlignment="Left" Margin="3,0,0,0" 
                                         VerticalAlignment="Top" 
                                         Width="130" Height="25" Click="ClickMainCommand" >
                <Grid>
                    <TextBlock Text="Append to Test"  HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                </Grid>
                      

                <xctk:DropDownButton.DropDownContent>
                            <StackPanel>
                                <Button Name="appendEndBtn" Command ="{Binding AppendToEndOfTestCommand}" Click="Content1Click">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Background="Transparent" Foreground="White" Text="Append to End of Test"></TextBlock>
                                    </StackPanel>
                                </Button> 
                                <Button Command ="{Binding AppendToStartOfTestCommand}" Click="Content1Click">
                                    <StackPanel Orientation="Horizontal">
                                         <TextBlock Background="Transparent" Foreground="White" Text="Append to Start of Test"></TextBlock>
                                    </StackPanel>
                                </Button>   
                                <Button  Command ="{Binding AppendAfterSelectedItemCommand}" Click="Content1Click">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Background="Transparent" Foreground="White" Text="Append after Selected Item"></TextBlock>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </xctk:DropDownButton.DropDownContent>
                </xctk:DropDownButton>
            <Button Click="ExpandEvent" Margin="0,0,17,0" Height="25" 
                VerticalAlignment="Top" Background="Transparent" 
                    HorizontalAlignment="Right" >
                <StackPanel Orientation="Horizontal">
                    <Image Height="20" Width="20" Source="../../Images/Add.png"></Image>
                    <TextBlock Background="Transparent"
                               Foreground="White" Text="Expand All"></TextBlock>
                </StackPanel>
            </Button>
            <Button Click="UnexpandEvent" Margin="0,0,17,0" Height="25" 
                VerticalAlignment="Top" Background="Transparent" 
                    HorizontalAlignment="Right" >
                <StackPanel Orientation="Horizontal">
                    <Image Height="20" Width="20" Source="../../Images/Subtract.png"></Image>
                    <TextBlock Background="Transparent"
                               Foreground="White" Text="Unexpand All"></TextBlock>
                </StackPanel>
            </Button>

            <Button Command="{Binding RefreshCommand}" Margin="0,0,17,0" Height="25" 
                VerticalAlignment="Top" Background="Transparent" 
                    HorizontalAlignment="Right" >
                <StackPanel Orientation="Horizontal">
                    <TextBlock Background="Transparent"
                               Foreground="White" Text="Refresh"></TextBlock>
                </StackPanel>
            </Button>

        </ToolBar>

       
        <ScrollViewer Name="scrollViewer" Grid.Row="1" HorizontalScrollBarVisibility="Visible" Background="DarkGray" 
                      VerticalScrollBarVisibility="Visible" >
           

            <customControls:TreeListView Name="detailsTlv"  AllowsColumnReorder="True" ItemsSource="{Binding TestItems}"
                            HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
                            SelectedObject="{Binding SelectedTestItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="White"
                                          RequestBringIntoView="HandleRequestBringIntoView" PreviewKeyUp="detailsTlv_PreviewKeyUp"
                                         PreviewMouseWheel="DetailsTlv_PreviewMouseWheel"  dd:DragDrop.IsDragSource="True"
                      dd:DragDrop.IsDropTarget="True"
                      dd:DragDrop.UseDefaultDragAdorner="True">
       
                <!--Create an item template to specify the ItemsSource-->
            <customControls:TreeListView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding ChildItems}" />
            </customControls:TreeListView.ItemTemplate>
            <customControls:TreeListView.Columns >
                <GridViewColumn Header="" Width="40">
                    <GridViewColumn.CellTemplate >
                        <DataTemplate>
                            <Border Style="{StaticResource BorderStyle}" Margin="-6,0,-6,0">
                                <StackPanel Orientation="Horizontal" Height="{TemplateBinding Height}">
                                    <treeview:DebugButton Margin="0,0,0,0" Width="15" Height="15" Name="DebugButton" 
                                                          IsDebugging="{Binding DebugState, UpdateSourceTrigger=PropertyChanged}"></treeview:DebugButton>
                                    <Image ToolTip="Screenshot available" Name="picImage"  Height="15" Width="15" Visibility="Collapsed" Source="../../Images/Monitor.png"></Image >
                                </StackPanel>
                            </Border>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding HasScreenshot}" Value="True">
                                    <Setter  TargetName="picImage" Property="Visibility" Value="Visible"></Setter>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>

                    </GridViewColumn.CellTemplate>

                </GridViewColumn>
                <!--Create the first column containing the expand button and the type name.-->
                    <GridViewColumn Header="Item" Width="200">

                        <GridViewColumn.CellTemplate >
                        
                        <DataTemplate >
                            <Border Name="ObjectBorder"  Style="{StaticResource BorderStyle}" Margin="-6,0,-6,0">
                                    <StackPanel Orientation="Horizontal" >
                                        <Grid >
                                            <customControls:TreeListViewExpander Margin="0,1,0,0" Canvas.ZIndex="1" IsChecked="True" />
                                            <!-- <TreeViewItem Template="{StaticResource TreeViewItemLines}"></TreeViewItem>-->
                                        </Grid>
                                        <StackPanel Orientation="Horizontal" >
                                            <!--The Expander Button (can be used in any column (typically the first one))-->
                                            <Image Width ="20" Height ="20"  Source="{Binding Converter={StaticResource TestItemImageConverter} }"></Image>

                                            <Label Content="{Binding Name, Mode=OneWay}" HorizontalAlignment="Left" >
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseDoubleClick">
                                                        <i:InvokeCommandAction Command="{Binding Path=EditObjectCommand, Mode=OneWay}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </Label>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <!--Create a second column containing the number of children.-->
                <GridViewColumn Header="Operation" Width="100">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Border Style="{StaticResource BorderStyle}" Margin="-6,0,-6,0" >
                                <!--Display the size of the DataElement-->
                                    <Label Content="{Binding Operation, Mode=OneWay}" HorizontalAlignment="Center" >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding Path=EditOperationCommand, Mode=OneWay}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Label>
                                </Border>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <!--Create a third column containing the brush of the material.-->
                <GridViewColumn Header="Value" Width="120" >
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Border Style="{StaticResource BorderStyle}" Margin="-6,0,-6,0">
                                    <Label ToolTip="{Binding Value}" Content="{Binding Value, Mode=OneWay}" HorizontalAlignment="Center" >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{Binding Path=EditParameterCommand, Mode=OneWay}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Label>
                                </Border>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Header="Description" Width="300">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Border Style="{StaticResource BorderStyle}" Margin="-6,0,-6,0">
                                    <Label Content="{Binding Description, Mode=OneWay}" ToolTip="{Binding Description}" HorizontalAlignment="Left" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseDoubleClick">
                                                    <i:InvokeCommandAction Command="{Binding Path=EditObjectCommand, Mode=OneWay}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Label>
                                </Border>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </customControls:TreeListView.Columns>
        </customControls:TreeListView>
        </ScrollViewer>

    </Grid>
</UserControl>
