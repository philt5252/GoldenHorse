<UserControl x:Class="Olf.GoldenHorse.Core.Views.TestMainShellView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
             xmlns:regions="http://www.codeplex.com/CompositeWPF"
             xmlns:views="clr-namespace:Olf.GoldenHorse.Core.Views"
             xmlns:themes="http://avalondock.codeplex.com"
             xmlns:variables="clr-namespace:Olf.GoldenHorse.Core.Views.Views.Variables"
             Tag="{Binding TestName}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" >
    <UserControl.InputBindings>
        <KeyBinding Key="S"
                Modifiers="Control" 
                Command="{Binding SaveCommand}" />
    </UserControl.InputBindings>

    <UserControl.Resources>

        <Style x:Key="AvalonDock_ThemeVS2010_DocumentPaneControlStyle" TargetType="{x:Type themes:LayoutDocumentPaneControl}">
            <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor33}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="TabStripPlacement" Value="Bottom"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type themes:LayoutDocumentPaneControl}">
                        <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!--Following border is required to catch mouse events-->
                            <Border Background="Transparent" Grid.RowSpan="2"/>
                            <Grid  Panel.ZIndex="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <themes:DocumentPaneTabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="2,0,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>
                                <themes:DropDownButton
                                x:Name="MenuDropDownButton"
                                Style="{StaticResource AvalonDock_ThemeVS2010_ToolButtonStyle}"
                                Focusable="False"
                                VerticalAlignment="Center"
                                Grid.Column="1" Visibility="Collapsed">
                                    <themes:DropDownButton.DropDownContextMenu>
                                        <themes:ContextMenuEx
                                        ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                            <themes:ContextMenuEx.ItemContainerStyle>
                                                <Style TargetType="{x:Type themes:MenuItemEx}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                    <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}"/>
                                                    <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}"/>
                                                    <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}"/>
                                                    <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}"/>
                                                    <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}"/>
                                                </Style>
                                            </themes:ContextMenuEx.ItemContainerStyle>
                                        </themes:ContextMenuEx>
                                    </themes:DropDownButton.DropDownContextMenu>
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/PinDocMenu.png"/>
                                </themes:DropDownButton>
                            </Grid>
                            <Border x:Name="ContentPanel" 
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"  
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Cycle"
                                CornerRadius="3"
                                Padding="0,1,0,2">
                                <ContentPresenter x:Name="PART_SelectedContentHost" 
                                              ContentSource="SelectedContent" 
                                              Margin="0,2,0,2"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" SourceName="MenuDropDownButton" Value="True">
                                <Setter Property="Content" TargetName="MenuDropDownButton">
                                    <Setter.Value>
                                        <Image Source="/AvalonDock.Themes.VS2010;component/Images/PinDocMenu_Black.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" SourceName="MenuDropDownButton" Value="True">
                                <Setter Property="Content" TargetName="MenuDropDownButton">
                                    <Setter.Value>
                                        <Image Source="/AvalonDock.Themes.VS2010;component/Images/PinDocMenu_Black.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsLastFocusedDocument}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor31}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}" Value="False"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsLastFocusedDocument}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor30}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="MenuDropDownButton" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Foreground" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor10}"/>
                        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor4}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor4}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                        <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                        <Setter Property="Padding" Value="2,0,2,0"/>
                        <Setter Property="Margin" Value="2,0,2,0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid SnapsToDevicePixels="true">
                                        <Border x:Name="Bd" 
							              BorderBrush="{TemplateBinding BorderBrush}"
   				                          BorderThickness="1,1,1,0" 
                                          CornerRadius="2,2,0,0"
							              Background="{TemplateBinding Background}" 
							              Padding="{TemplateBinding Padding}">
                                            <ContentPresenter 
								            x:Name="Content" 
								            ContentSource="Header" 
                                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                            RecognizesAccessKey="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Selector.IsSelected"
								            Value="true">
                                            <Setter Property="BorderBrush"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor33}" />
                                            <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor16}" />
                                            <Setter Property="Foreground"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor2}"/>
                                            <Setter Property="Panel.ZIndex" 
                                            Value="1" />
                                            <Setter Property="Margin" Value="-1,0,-1,-4"/>
                                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,3"/>
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsActive}" Value="True"/>
                                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderBrush"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor31}" />
                                            <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor25}" />
                                            <Setter Property="Foreground"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor3}"/>
                                            <Setter Property="Panel.ZIndex" 
                                            Value="1" />
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsActive}" Value="False"/>
                                                <Condition Binding="{Binding IsLastFocusedDocument}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderBrush"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor30}" />
                                            <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor24}" />
                                            <Setter Property="Foreground"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor3}"/>
                                            <Setter Property="Panel.ZIndex" 
                                            Value="1" />
                                        </MultiDataTrigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="true"/>
                                                <Condition Property="Selector.IsSelected" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor14}"/>
                                            <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor6}"/>
                                            <Setter Property="Panel.ZIndex" Value="0" />
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor13}"/>
                                            <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor9}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <themes:LayoutDocumentTabItem Model="{Binding}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <themes:LayoutDocumentControl Model="{Binding}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid>
     <Grid.Resources>
           
    </Grid.Resources>
        <themes:DockingManager DocumentPaneControlStyle="{StaticResource AvalonDock_ThemeVS2010_DocumentPaneControlStyle}" >

            <themes:DockingManager.Theme>
                <themes:VS2010Theme></themes:VS2010Theme>
            </themes:DockingManager.Theme>
            <themes:LayoutRoot>
                <themes:LayoutPanel Orientation="Vertical">
                    <themes:LayoutDocumentPane x:Name="TestShellPane"  DockHeight="300*" >
                        <themes:LayoutDocument Title="Test Steps" CanClose="False" >
                           <views:TestShellView x:Name="testShellView"></views:TestShellView>
                       </themes:LayoutDocument>
                        <themes:LayoutDocument Title="Variables" CanClose="False">
                            <variables:VariableManagerView x:Name="variableManagerView"></variables:VariableManagerView>
                        </themes:LayoutDocument>
                    </themes:LayoutDocumentPane>
                    <themes:LayoutAnchorablePane DockHeight="150">
                        <themes:LayoutAnchorable Title="Test Screenshots" CanClose="False">
                            <views:TestScreenshotsView x:Name="testScreenshotsView" ></views:TestScreenshotsView>
                        </themes:LayoutAnchorable>
                    </themes:LayoutAnchorablePane>
                      
                </themes:LayoutPanel>
            </themes:LayoutRoot>
        </themes:DockingManager>
    

    </Grid>
</UserControl>
